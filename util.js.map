{"version":3,"file":"util.js","sourceRoot":"","sources":["src/util.ts"],"names":[],"mappings":"AAAA,SAAS,WAAW,CAAC,GAAW,EAAE,KAAa;IAC3C,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,UAAU,CAAA;AACpD,CAAC;AAED,SAAS,WAAW,CAAC,GAAW;IAC5B,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,0DAA0D,CAAA;AACtF,CAAC;AAED,SAAS,UAAU,CAAC,GAAW;IAC3B,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;IACrB,IAAI,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACxD,IAAI,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAClC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAE,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC9B,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACd,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;YAC3B,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACtB,OAAO,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;SAC7C;KACJ;IACD,OAAO,EAAE,CAAC;AACd,CAAC;AAED,KAAK,UAAU,OAAO,CAAC,GAAW,EAAE,IAAY,EAAE,aAAkB;IAEhE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;QAEhC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1C,IAAG,GAAG,IAAI,IAAI,EAAE;gBACZ,IAAG,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;oBACrB,OAAO,CAAC,GAAG,CAAC,CAAC;iBAChB;aACJ;QACL,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACtB,GAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACzD,GAAG,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;QAC3D,IAAG,aAAa,IAAI,IAAI,EAAE;YACtB,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,QAAQ,GAAG,aAAa,CAAC,CAAC;SACnE;QACD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEnB,OAAO,GAAG,CAAC;IAEf,CAAC,CAAC,CAAA;AAEN,CAAC;AAED,MAAM,eAAe,GAAG;IACpB,WAAW,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO;CAChD,CAAC;AAEF,eAAe,eAAe,CAAC","sourcesContent":["function writeCookie(key: string, value: string): void {\n    document.cookie = key + \"=\" + value + \"; path=/\"\n}\n\nfunction clearCookie(key: string) {\n    document.cookie = key + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; path=/\"\n}\n\nfunction readCookie(key: string): string {\n    let name = key + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for(let i = 0; i <ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nasync function callApi(url: string, data: string, authorization: any) {\n\n    return new Promise((resolve: any) => {\n\n        const jsonData = JSON.stringify(data);\n        var xhr = new XMLHttpRequest();\n        xhr.addEventListener(\"readystatechange\", () => {\n            if(xhr != null) {\n                if(xhr.readyState === 4) {\n                    resolve(xhr);\n                }\n            }\n        });\n        xhr.open(\"POST\", url);\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); \n        if(authorization != null) {\n            xhr.setRequestHeader('Authorization', 'Basic ' + authorization);\n        }\n        xhr.send(jsonData);\n\n        return xhr;\n\n    })\n\n}\n\nconst exportFunctions = {\n    writeCookie, readCookie, clearCookie, callApi\n};\n\nexport default exportFunctions;"]}